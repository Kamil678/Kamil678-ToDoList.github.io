{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","_this","handleTextChange","e","setState","target","value","handleCheckboxChange","handleDateChange","handleClickBtn","_this$state","props","add","maxDate","this","react_default","a","createElement","className","type","placeholder","onChange","id","htmlFor","min","max","onClick","Component","Task","_props$task","task","active","important","finishDate","style","color","change","delete","doneDate","toLocaleString","TaskList","tasks","filter","done","sort","b","toLowerCase","activeTasks","map","src_components_Task","key","doneTasks","length","App","counter","deleteTask","Object","toConsumableArray","index","findIndex","splice","changeTaskStatus","forEach","getTime","addTask","prevState","concat","alert","src_components_AddTask","src_components_TaskList","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8e0ceaa4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './AddTask.css';\r\n\r\nclass AddTask extends Component {\r\n\r\n  minDate = new Date().toISOString().slice(0,10);\r\n\r\n  state = {\r\n    text: '',\r\n    checked: false,\r\n    date: this.minDate,\r\n  }\r\n\r\n  handleTextChange = (e) =>{\r\n    this.setState({\r\n      text: e.target.value\r\n    })\r\n  }\r\n  \r\n  handleCheckboxChange = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked\r\n    })\r\n  }\r\n\r\n  handleDateChange = (e) => {\r\n    this.setState({\r\n      date: e.target.value\r\n    })\r\n  }\r\n\r\n  handleClickBtn = () => {\r\n    const {text,checked,date} = this.state\r\n    const add = this.props.add(text, checked, date)\r\n    if(add) {\r\n      this.setState({\r\n        text: \"\",\r\n        checked: false,\r\n        date: this.minDate,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() { \r\n  let maxDate = this.minDate.slice(0,4)*1 + 2;\r\n  maxDate = maxDate + \"12-31\";\r\n\r\n  return (\r\n    <div className='addTaskForm'>\r\n      <input \r\n        type='text' \r\n        placeholder=\"Dodaj zadanie...\" \r\n        value={this.state.text} \r\n        onChange={this.handleTextChange}\r\n      />\r\n      <input \r\n        type=\"checkbox\" \r\n        checked={this.state.checked} \r\n        id=\"important\" \r\n        onChange={this.handleCheckboxChange}\r\n      />\r\n      <label htmlFor='important' className='important'>Priorytet</label><br/>\r\n      <label htmlFor='date'>Do kiedy zrobić: </label>\r\n      <input \r\n        type=\"date\" \r\n        value={this.state.date} \r\n        min={this.minDate} \r\n        max={maxDate} \r\n        onChange={this.handleDateChange}\r\n      /> <br/>\r\n      <button onClick={this.handleClickBtn}>Dodaj</button>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default AddTask;\r\n\r\n ","import React from 'react';\r\nimport \"./Task.css\"\r\n\r\nconst Task = (props) => {\r\n\r\n  const importantStyle = {\r\n    color: 'red',\r\n  }    \r\n\r\n  const {text, date, id, active, important, finishDate} = props.task;\r\n\r\n  if(active){\r\n  return ( \r\n    <div className='task'>\r\n      <p style={important ? importantStyle : null}>{text}</p> <span className='date'> (do {date})</span>\r\n      <button className='doneTask' onClick={() => props.change(id)}>Zrobione</button>\r\n      <button className='deleteTask' onClick={() => props.delete(id)}>Usuń</button>\r\n    </div>\r\n   );\r\n  } else{\r\n\r\n      const doneDate = new Date(finishDate).toLocaleString()\r\n      return(\r\n        <div className='done'>\r\n          <p>\r\n            <strong>{text}</strong><br/>- miałeś zrobić do <span>{date}</span><br/>\r\n            -wykonano <span className='done-date'>{doneDate}</span>\r\n            <button onClick={() => props.delete(id)}>X</button>\r\n          </p>\r\n        </div>\r\n      )\r\n   }\r\n}\r\n \r\nexport default Task;","import React from 'react';\r\nimport Task from './Task'\r\nimport './TaskList.css';\r\n\r\nconst TaskList = (props) => {\r\n\r\n  const active = props.tasks.filter(task => task.active);\r\n\r\n  const done = props.tasks.filter(task => !task.active);\r\n\r\n  active.sort((a,b) => {\r\n\r\n    a = a.text.toLowerCase();\r\n    b = b.text.toLowerCase();\r\n\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    return 0\r\n  })\r\n\r\n  done.sort((a,b) => b.finishDate - a.finishDate);\r\n\r\n  const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change}/>\r\n  );\r\n\r\n  const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change}/>\r\n    );\r\n\r\n  return ( \r\n    <div className='tasksList'>\r\n      <div className='activeTasks'>\r\n        <h2>Zadania do zrobienia:</h2>\r\n        {activeTasks.length > 0 ? activeTasks : <h3>Nie masz narazie żadnych zadań do wykonania</h3>}\r\n      </div>\r\n      <hr/>\r\n      <div className='doneTasks'>\r\n        <h2>Zadania zrobione <em>({done.length})</em></h2>\r\n        {doneTasks}\r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default TaskList;","import React, { Component } from 'react';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\nimport './App.css';\n\nclass App extends Component {\n  counter = 9;\n  state = {\n    tasks: [\n      {\n        id:0,\n        text:\"Zagrać w fife\",\n        date: \"2021-12-15\",\n        important: true,\n        active: true,\n        finishDate: null\n      },\n      { \n        id: 3, \n        text: \"schudnąć 30 kilogramów\", \n        date: '2019-05-20', \n        important: true, \n        active: false, \n        finishDate: null \n      },\n    ]\n  }\n\n  deleteTask = (id) => {\n    const tasks = [...this.state.tasks];\n    const index = tasks.findIndex(task => task.id === id);\n    tasks.splice(index, 1);\n    \n    this.setState({\n      tasks,\n    })\n  }\n\n  changeTaskStatus = (id) => {\n    const tasks = [...this.state.tasks];\n    tasks.forEach(task => {\n      if(task.id === id){\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    })\n\n    this.setState({\n      tasks,\n    })\n    \n  }\n\n  addTask = (text,important,date) => {\n    if(text.length > 2){\n    const task = {\n      id: this.counter,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: null\n    }\n    this.counter++;\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task],\n    }))\n    return true\n  } else {\n    alert(\"Zadanie musi mieć więcej niż 2 znaki!\");\n  }\n}\n\n  render() {\n    return (\n      <div className='App'>\n         <h1>TODO APP</h1>\n         <AddTask \n          add={this.addTask}\n         />\n         <TaskList \n          tasks={this.state.tasks}\n          delete={this.deleteTask}\n          change={this.changeTaskStatus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/* { id: 1, \n        text: \"zrobić dobry uczynej\", \n        date: '2020-11-12', \n        important: false, \n        active: true, \n        finishDate: null \n      },\n      { \n        id: 2, \n        text: \"pomalować dom po sylwestrze\", \n        date: '2019-09-11', \n        important: false, \n        active: true, \n        finishDate: null \n      },\n      { \n        id: 3, \n        text: \"schudnąć 30 kilogramów\", \n        date: '2019-05-20', \n        important: true, \n        active: true, \n        finishDate: null \n      },\n      { \n        id: 4, \n        text: \"sprzedać butelki po piwie (20 skrzynek)\", \n        date: '2020-11-12', \n        important: false, \n        active: true, \n        finishDate: null \n      },\n      { \n        id: 5, \n        text: \"jeszcze raz pomalować dom\", \n        date: '2019-09-11', \n        important: false, \n        active: true, \n        finishDate: null \n      },\n      { \n        id: 6, \n        text: \"fryzjer!!!\", \n        date: '2019-05-20', \n        important: true, \n        active: true, \n        finishDate: null \n      },\n      { \n        id: 7, \n        text: \"nie odbierać poleconego od komornika\", \n        date: '2020-11-12', \n        important: false, \n        active: true, \n        finishDate: null \n      },\n      { \n        id: 8, \n        text: \"kupić 2 butelki litrowe\", \n        date: '2019-09-11', \n        important: false, \n        active: true, \n        finishDate: null \n      },\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}